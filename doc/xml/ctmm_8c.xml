<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ctmm_8c" kind="file" language="C++">
    <compoundname>ctmm.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="ctmm_8h" local="yes">ctmm.h</includes>
    <includes refid="DLL__defines_8h" local="yes">DLL_defines.h</includes>
    <incdepgraph>
      <node id="12">
        <label>stdlib.h</label>
      </node>
      <node id="16">
        <label>ctmm.h</label>
        <link refid="ctmm_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>DLL_defines.h</label>
        <link refid="DLL__defines_8h_source"/>
      </node>
      <node id="11">
        <label>src/ctmm.c</label>
        <link refid="ctmm_8c"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>string.h</label>
      </node>
      <node id="15">
        <label>math.h</label>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structctmm__stack" prot="public">ctmm_stack</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="ctmm_8c_1a57a0f44cc82a3117464febc935e170ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CTMM_EXPORT double</type>
        <definition>CTMM_EXPORT double test_func</definition>
        <argsstring>()</argsstring>
        <name>test_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="21" column="1" bodyfile="src/ctmm.c" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
        <definition>ctmm_complex ctmm_complex_set</definition>
        <argsstring>(double re, double im)</argsstring>
        <name>ctmm_complex_set</name>
        <param>
          <type>double</type>
          <declname>re</declname>
        </param>
        <param>
          <type>double</type>
          <declname>im</declname>
        </param>
        <briefdescription>
<para>returns <ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> number re + im*I. </para>        </briefdescription>
        <detaileddescription>
<para>Defining complex numbers in this way allows C99 complex operations to be performed on ctmm variables in code that will only ever be compiled on a standards compliant compiler, whilst allowing operations internal to ctmm to remain cross platform for the MSVC compiler. Internal complex functions are not optimized, but should compile more or less anywhere. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="44" column="1" bodyfile="src/ctmm.c" bodystart="44" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1ac396fbdfd0ddd6310fb9806201d96539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
        <definition>ctmm_complex ctmm_complex_mul_real</definition>
        <argsstring>(ctmm_complex z, double x)</argsstring>
        <name>ctmm_complex_mul_real</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>multiplies <ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> by real number</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>real number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> z*x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="74" column="1" bodyfile="src/ctmm.c" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a880c74cdfcd1c8c7b21c1cea00105ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
        <definition>ctmm_complex ctmm_complex_add_real</definition>
        <argsstring>(ctmm_complex z, double x)</argsstring>
        <name>ctmm_complex_add_real</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>add <ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> to real number</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>real number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> z + x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="79" column="1" bodyfile="src/ctmm.c" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
        <definition>ctmm_complex ctmm_complex_mul</definition>
        <argsstring>(ctmm_complex z1, ctmm_complex z2)</argsstring>
        <name>ctmm_complex_mul</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z1</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>multiplies two <ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> numbers</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z1</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z2</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> z1*z2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="84" column="1" bodyfile="src/ctmm.c" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a55252e47eeb22ec37e7eb50cda6c1ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
        <definition>ctmm_complex ctmm_complex_sub</definition>
        <argsstring>(ctmm_complex z1, ctmm_complex z2)</argsstring>
        <name>ctmm_complex_sub</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z1</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>subtracts one <ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> from another</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z1</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z2</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> z1 - z2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="90" column="1" bodyfile="src/ctmm.c" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1ad157e583a138eae74eab9abac867075b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
        <definition>ctmm_complex ctmm_complex_add</definition>
        <argsstring>(ctmm_complex z1, ctmm_complex z2)</argsstring>
        <name>ctmm_complex_add</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z1</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>adds one <ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> to another</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z1</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z2</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> z1 + z2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="95" column="1" bodyfile="src/ctmm.c" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1ada1e9a3839be822e487f3fca8acd573f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
        <definition>ctmm_complex ctmm_complex_div</definition>
        <argsstring>(ctmm_complex z1, ctmm_complex z2)</argsstring>
        <name>ctmm_complex_div</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z1</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>divides one <ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> by another</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z1</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z2</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> z1/z2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="100" column="1" bodyfile="src/ctmm.c" bodystart="100" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a9112881f409b5e0365dcee836bce2596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ctmm_complex_abs</definition>
        <argsstring>(ctmm_complex z)</argsstring>
        <name>ctmm_complex_abs</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="108" column="1" bodyfile="src/ctmm.c" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1ac0ec321ce48ab4a98377e397699aaa82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
        <definition>ctmm_complex ctmm_complex_sqrt</definition>
        <argsstring>(ctmm_complex z)</argsstring>
        <name>ctmm_complex_sqrt</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calculates square root of <ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> sqrt(z) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="113" column="1" bodyfile="src/ctmm.c" bodystart="113" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a7b6264648ca7235f90d2e13ce38c1a21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
        <definition>ctmm_complex ctmm_complex_exp</definition>
        <argsstring>(ctmm_complex z)</argsstring>
        <name>ctmm_complex_exp</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calculates e to the power <ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> e^z </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="123" column="1" bodyfile="src/ctmm.c" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1ad67b3674023a1098f4c78c167b52177f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
        <definition>ctmm_complex ctmm_complex_conj</definition>
        <argsstring>(ctmm_complex z)</argsstring>
        <name>ctmm_complex_conj</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calculates complex conjugate of <ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> conj(z) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="129" column="1" bodyfile="src/ctmm.c" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a7d0966ff911cc38769383bf2eabf159d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
        <definition>ctmm_complex ctmm_complex_inv</definition>
        <argsstring>(ctmm_complex z)</argsstring>
        <name>ctmm_complex_inv</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calculates inverse of <ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> 1/z </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="134" column="1" bodyfile="src/ctmm.c" bodystart="134" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a8089534c72b9ab48e523a0169094176f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ctmm_complex_abs2</definition>
        <argsstring>(ctmm_complex z)</argsstring>
        <name>ctmm_complex_abs2</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calculates absolute value squared of <ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> |z|^2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="141" column="1" bodyfile="src/ctmm.c" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a84b56e81b9f30ab371756fd2366f1a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ctmm_complex_arg</definition>
        <argsstring>(ctmm_complex z)</argsstring>
        <name>ctmm_complex_arg</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calculates argument of <ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>complex number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> atan2(Im(z), Re(z)) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="146" column="1" bodyfile="src/ctmm.c" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ctmm_matrix_set</definition>
        <argsstring>(ctmm_matrix *mat, unsigned int row, unsigned int col, ctmm_complex val)</argsstring>
        <name>ctmm_matrix_set</name>
        <param>
          <type><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref> *</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>col</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets matrix value mat[row][col] to val</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>row </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>column </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>complex value of mat[row][col] </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="151" column="1" bodyfile="src/ctmm.c" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
        <definition>ctmm_complex ctmm_matrix_get</definition>
        <argsstring>(ctmm_matrix *mat, unsigned int row, unsigned int col)</argsstring>
        <name>ctmm_matrix_get</name>
        <param>
          <type><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref> *</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets matrix value mat[row][col]</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>row </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>column</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> value of mat[row][col] </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="156" column="1" bodyfile="src/ctmm.c" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a7dbeb8fe6b43fcc408f3f591cc8e0563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ctmm_matrix_mul</definition>
        <argsstring>(ctmm_matrix *mat1, ctmm_matrix *mat2, ctmm_matrix *res)</argsstring>
        <name>ctmm_matrix_mul</name>
        <param>
          <type><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref> *</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref> *</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref> *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>multiplies two ctmm matrices and sets result res = mat1*mat2</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to matrix1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mat1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to matrix2 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to result matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="161" column="1" bodyfile="src/ctmm.c" bodystart="161" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a2edabd1077bd3ea3fb17d3bbfea89311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref></type>
        <definition>ctmm_stack ctmm_create_stack</definition>
        <argsstring>(unsigned int nlyrs, double vwl, double t_in)</argsstring>
        <name>ctmm_create_stack</name>
        <param>
          <type>unsigned int</type>
          <declname>nlyrs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vwl</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_in</declname>
        </param>
        <briefdescription>
<para>Initialises a new stack. </para>        </briefdescription>
        <detaileddescription>
<para>The stack should be deallocated with ctmm_free_stack(stack).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nlyrs</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of layers in stack. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vwl</parametername>
</parameternamelist>
<parameterdescription>
<para>Vacuum wavelength of illuminating light (metres). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Angle of incidence (radians).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref> with initialised arrays and matricies. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="247" column="1" bodyfile="src/ctmm.c" bodystart="247" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1af16ab0909b285aa22571bec6713f62cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ctmm_free_stack</definition>
        <argsstring>(ctmm_stack stack)</argsstring>
        <name>ctmm_free_stack</name>
        <param>
          <type><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref></type>
          <declname>stack</declname>
        </param>
        <briefdescription>
<para>Frees memory allocated upon stack creation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="267" column="1" bodyfile="src/ctmm.c" bodystart="267" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a32befee43f0a7a47d72395197140a27c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ctmm_set_ind</definition>
        <argsstring>(ctmm_stack stack, unsigned int lyr_n, double x, double y)</argsstring>
        <name>ctmm_set_ind</name>
        <param>
          <type><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref></type>
          <declname>stack</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>lyr_n</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Sets the refractive index of layer lyr_n to (x + y*i). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref> to set index in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lyr_n</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer number to set the index of. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Real component of refractive index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Imaginary component of refractive index. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="274" column="1" bodyfile="src/ctmm.c" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a8c8b64a53a5376f96c174ab359daacc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ctmm_set_d</definition>
        <argsstring>(ctmm_stack stack, unsigned int lyr_n, double d)</argsstring>
        <name>ctmm_set_d</name>
        <param>
          <type><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref></type>
          <declname>stack</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>lyr_n</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Sets the thickness of layer lyr_n to d. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref> to set thickness in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lyr_n</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer number to set the index of. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>Thickness of layer lyr_n. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="279" column="1" bodyfile="src/ctmm.c" bodystart="279" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a32d942b103a0b890fbce784d87cb6a1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
        <definition>ctmm_complex kz</definition>
        <argsstring>(ctmm_complex n, ctmm_complex k, double vwl)</argsstring>
        <name>kz</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vwl</declname>
        </param>
        <briefdescription>
<para>Calculate kz. </para>        </briefdescription>
        <detaileddescription>
<para>Calculate the z (along stack) component of the wavevector from the x (parallel to interfaces) component of the wavevector in the zeroth layer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Refractive index of layer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Wavevector x component in zeroth layer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vwl</parametername>
</parameternamelist>
<parameterdescription>
<para>Vacuum wavelength of illuminating light.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Wavevector z component. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="284" column="1" bodyfile="src/ctmm.c" bodystart="284" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a04b474cdb46c4c66f9774647d29f3f41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
        <definition>ctmm_complex ctmm_get_ind</definition>
        <argsstring>(ctmm_stack stack, unsigned int lyr_n)</argsstring>
        <name>ctmm_get_ind</name>
        <param>
          <type><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref></type>
          <declname>stack</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>lyr_n</declname>
        </param>
        <briefdescription>
<para>Returns the refractive index of layer lyr_n to (x + y*i). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref> to get index from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lyr_n</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer number to get the index of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="295" column="1" bodyfile="src/ctmm.c" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a79f04adb70eecf66fef2209b9d75fe9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ctmm_get_d</definition>
        <argsstring>(ctmm_stack stack, unsigned int lyr_n)</argsstring>
        <name>ctmm_get_d</name>
        <param>
          <type><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref></type>
          <declname>stack</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>lyr_n</declname>
        </param>
        <briefdescription>
<para>Returns the thickness of layer lyr_n. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref> to get thickness from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lyr_n</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer number to get the index of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="300" column="1" bodyfile="src/ctmm.c" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a25b9de0418a73bc8f37ba2a7789924ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ctmm_get_vwl</definition>
        <argsstring>(ctmm_stack stack)</argsstring>
        <name>ctmm_get_vwl</name>
        <param>
          <type><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref></type>
          <declname>stack</declname>
        </param>
        <briefdescription>
<para>Returns the vacuum wavelength used by stack. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref> to get vwl from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="305" column="1" bodyfile="src/ctmm.c" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1ac443f13f8513c290d2851351eefee8da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ctmm_get_t_in</definition>
        <argsstring>(ctmm_stack stack)</argsstring>
        <name>ctmm_get_t_in</name>
        <param>
          <type><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref></type>
          <declname>stack</declname>
        </param>
        <briefdescription>
<para>Returns the angle of incidence used by stack. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref> to get t_in from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="310" column="1" bodyfile="src/ctmm.c" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1aa06062f77efb4011d9dfe71fd30bc131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ctmm_get_nlyrs</definition>
        <argsstring>(ctmm_stack stack)</argsstring>
        <name>ctmm_get_nlyrs</name>
        <param>
          <type><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref></type>
          <declname>stack</declname>
        </param>
        <briefdescription>
<para>Returns the number of layers in stack. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref> to get nlyrs from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="315" column="1" bodyfile="src/ctmm.c" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1abe9c12ff2df15ca021118c8a04c774aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref> *</type>
        <definition>ctmm_matrix* ctmm_get_matrix</definition>
        <argsstring>(ctmm_stack stack)</argsstring>
        <name>ctmm_get_matrix</name>
        <param>
          <type><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref></type>
          <declname>stack</declname>
        </param>
        <briefdescription>
<para>Returns a pointer to the first element of the stack matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref> to get matrix from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="320" column="1" bodyfile="src/ctmm.c" bodystart="320" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a4408a75f27f34aff932b811d711877c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void evaluate_prop</definition>
        <argsstring>(ctmm_matrix *pmat, double d, ctmm_complex n, ctmm_complex k, double vwl)</argsstring>
        <name>evaluate_prop</name>
        <param>
          <type><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref> *</type>
          <declname>pmat</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vwl</declname>
        </param>
        <briefdescription>
<para>Evaluate propigation matrix, for internal use. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmat</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to be filled. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer thickness. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer refractive index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Wavevector component parallel to interfaces. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vwl</parametername>
</parameternamelist>
<parameterdescription>
<para>Vacuum wavelength of illuminating light. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="325" column="1" bodyfile="src/ctmm.c" bodystart="325" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a77b3c2fc690a96610df870d454e8a9fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fresnel_coefs</definition>
        <argsstring>(ctmm_complex *coefs, ctmm_complex n0, ctmm_complex n1, ctmm_complex k, double vwl)</argsstring>
        <name>fresnel_coefs</name>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> *</type>
          <declname>coefs</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>n0</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>n1</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vwl</declname>
        </param>
        <briefdescription>
<para>Calculate Fresnel coefficients. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coefs</parametername>
</parameternamelist>
<parameterdescription>
<para>Array to be filled with coefficients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n0</parametername>
</parameternamelist>
<parameterdescription>
<para>Refractive index in incident layer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n1</parametername>
</parameternamelist>
<parameterdescription>
<para>Refractive index in exident layer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Wavevector component parallel to interfaces. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vwl</parametername>
</parameternamelist>
<parameterdescription>
<para>Vacuum wavelength of illuminating light. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="361" column="1" bodyfile="src/ctmm.c" bodystart="361" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a0a5fb333e72ce9adfcb2da0b1fa39d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void evaluate_tran</definition>
        <argsstring>(ctmm_matrix *tmat, ctmm_complex k, ctmm_complex n0, ctmm_complex n1, double vwl)</argsstring>
        <name>evaluate_tran</name>
        <param>
          <type><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref> *</type>
          <declname>tmat</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>n0</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref></type>
          <declname>n1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vwl</declname>
        </param>
        <briefdescription>
<para>Calculate transfer matrix, for internal use. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tmat</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to be filled. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Wavevector component parallel to interfaces. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n0</parametername>
</parameternamelist>
<parameterdescription>
<para>Refractive index in incident layer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n1</parametername>
</parameternamelist>
<parameterdescription>
<para>Refractive index in exident layer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vwl</parametername>
</parameternamelist>
<parameterdescription>
<para>Vacuum wavelength of illuminating light. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="383" column="1" bodyfile="src/ctmm.c" bodystart="383" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a7d1640fcbbdfc1557ff268183d630b61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ctmm_evaluate</definition>
        <argsstring>(ctmm_stack stack)</argsstring>
        <name>ctmm_evaluate</name>
        <param>
          <type><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref></type>
          <declname>stack</declname>
        </param>
        <briefdescription>
<para>Calculate the stack transfer matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="413" column="1" bodyfile="src/ctmm.c" bodystart="413" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a30648dba2233deb4014ce2632d51e43c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ctmm_rts</definition>
        <argsstring>(ctmm_stack stack, double *coefs)</argsstring>
        <name>ctmm_rts</name>
        <param>
          <type><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref></type>
          <declname>stack</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>coefs</declname>
        </param>
        <briefdescription>
<para>Calculates power reflectivities and transmissions. </para>        </briefdescription>
        <detaileddescription>
<para>Reflectivity and transmission coefficients are calculated for both S and P polarised light. The calculated coefficients are stored in the &apos;coefs&apos; array. The stack matrix must have already been evaluated.</para><para>This function may return incorrect results if the first or final layer in the stack is absorbing (that is, have a non-zero imaginary component of the refractive index).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coefs</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of coefficients ordered [rP, tP, rS, tS]. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack struct. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="438" column="1" bodyfile="src/ctmm.c" bodystart="438" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a26daf61ec975b2ee6de362418f7c5d65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ctmm_rtps</definition>
        <argsstring>(ctmm_stack stack, double *coefs)</argsstring>
        <name>ctmm_rtps</name>
        <param>
          <type><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref></type>
          <declname>stack</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>coefs</declname>
        </param>
        <briefdescription>
<para>Calculates power and phase reflectivities and transmissions. </para>        </briefdescription>
        <detaileddescription>
<para>Reflectivity and transmission coefficients and phases are calculated for both S and P polarised light. The calculated coefficients are stored in the &apos;coefs&apos; array. The stack matrix must have already been evaluated.</para><para>This function may return incorrect results if the first or final layer in the stack is absorbing (that is, have a non-zero imaginary component of the refractive index).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coefs</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to length 8 array of coefficients ordered [rP, tP, rS, tS, prP, ptP, prS, ptS]. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack struct. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="458" column="1" bodyfile="src/ctmm.c" bodystart="458" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="ctmm_8c_1a05b954b10e5a07eea69727509d89f346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ctmm_rtc</definition>
        <argsstring>(ctmm_stack stack, ctmm_complex *coefs)</argsstring>
        <name>ctmm_rtc</name>
        <param>
          <type><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref></type>
          <declname>stack</declname>
        </param>
        <param>
          <type><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref> *</type>
          <declname>coefs</declname>
        </param>
        <briefdescription>
<para>calculates fresnel coefficients of stack </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coefs</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to length 4 ctnn_complex array to hold coefficients ordered [r_p, t_p, r_s, t_s]. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to stack struct </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ctmm.c" line="486" column="1" bodyfile="src/ctmm.c" bodystart="486" bodyend="494"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An optical transfer matrix modelling library. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Angus Bridges </para></simplesect>
<simplesect kind="version"><para>0.3.0 </para></simplesect>
<simplesect kind="date"><para>2020-02-11</para></simplesect>
For function documentation see <ref refid="ctmm_8h" kindref="compound">ctmm.h</ref>.</para><para><simplesect kind="copyright"><para>Copyright (c) 2020 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ctmm_8h" kindref="compound">ctmm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DLL_defines.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">CTMM_EXPORT<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>test_func()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\ntest_func\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>12;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor">#if<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>for<sp/>C99<sp/>compiler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#include<sp/>&lt;complex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>re,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>im)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>re<sp/>+<sp/>im*I;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//custom<sp/>definitions<sp/>for<sp/>non-standards<sp/>compliant<sp/>compilers<sp/>(ie<sp/>msvc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>re,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>im)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.re<sp/>=<sp/>re;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z.im<sp/>=<sp/>im;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structctmm__stack" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlyrs;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vwl;<sp/></highlight><highlight class="comment">//vacuum<sp/>wavelength</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_in;<sp/></highlight><highlight class="comment">//theta<sp/>in,<sp/>the<sp/>incident<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>kx;<sp/></highlight><highlight class="comment">//x<sp/>component<sp/>of<sp/>wavevector<sp/>in<sp/>zeroth<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>*lyr_inds;<sp/></highlight><highlight class="comment">//layer<sp/>complex<sp/>refractive<sp/>indexes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lyr_ds;<sp/></highlight><highlight class="comment">//layer<sp/>thicknesses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref><sp/>tmp1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref><sp/>tmp2;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref><sp/>tmp3;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref><sp/>matrix;<sp/></highlight><highlight class="comment">//stack<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1ac396fbdfd0ddd6310fb9806201d96539" kindref="member">ctmm_complex_mul_real</ref>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(creal(z)*x,<sp/>cimag(z)*x);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1a880c74cdfcd1c8c7b21c1cea00105ec9" kindref="member">ctmm_complex_add_real</ref>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(creal(z)<sp/>+<sp/>x,<sp/>cimag(z));</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z1,<sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z2)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(creal(z1)*creal(z2)<sp/>-<sp/>cimag(z1)*cimag(z2),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>creal(z1)*cimag(z2)<sp/>+<sp/>cimag(z1)*creal(z2));</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1a55252e47eeb22ec37e7eb50cda6c1ca6" kindref="member">ctmm_complex_sub</ref>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z1,<sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z2)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(creal(z1)<sp/>-<sp/>creal(z2),<sp/>cimag(z1)<sp/>-<sp/>cimag(z2));</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z1,<sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z2)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(creal(z1)<sp/>+<sp/>creal(z2),<sp/>cimag(z1)<sp/>+<sp/>cimag(z2));</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1ada1e9a3839be822e487f3fca8acd573f" kindref="member">ctmm_complex_div</ref>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z1,<sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z2)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>creal(z2)*creal(z2)<sp/>+<sp/>cimag(z2)*cimag(z2);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>((creal(z1)*creal(z2)<sp/>+<sp/>cimag(z1)*cimag(z2))</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/denom,<sp/>(cimag(z1)*creal(z2)<sp/>-<sp/>creal(z1)*cimag(z2))/denom);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ctmm_complex_abs(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(<ref refid="ctmm_8c_1a8089534c72b9ab48e523a0169094176f" kindref="member">ctmm_complex_abs2</ref>(z));</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1ac0ec321ce48ab4a98377e397699aaa82" kindref="member">ctmm_complex_sqrt</ref>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>ctmm_complex_abs(z);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1ada1e9a3839be822e487f3fca8acd573f" kindref="member">ctmm_complex_div</ref>(<ref refid="ctmm_8c_1ac396fbdfd0ddd6310fb9806201d96539" kindref="member">ctmm_complex_mul_real</ref>(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a880c74cdfcd1c8c7b21c1cea00105ec9" kindref="member">ctmm_complex_add_real</ref>(z,<sp/>r),<sp/>sqrt(r)),</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(ctmm_complex_abs(<ref refid="ctmm_8c_1a880c74cdfcd1c8c7b21c1cea00105ec9" kindref="member">ctmm_complex_add_real</ref>(z,<sp/>r)),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0));</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1a7b6264648ca7235f90d2e13ce38c1a21" kindref="member">ctmm_complex_exp</ref>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(exp(creal(z))*cos(cimag(z)),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(exp(creal(z))*sin(cimag(z))));</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1ad67b3674023a1098f4c78c167b52177f" kindref="member">ctmm_complex_conj</ref>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(creal(z),<sp/>-cimag(z));</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1a7d0966ff911cc38769383bf2eabf159d" kindref="member">ctmm_complex_inv</ref>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>creal(z)*creal(z)<sp/>+<sp/>cimag(z)*cimag(z);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(creal(z)/denom,<sp/>-cimag(z)/denom);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a8089534c72b9ab48e523a0169094176f" kindref="member">ctmm_complex_abs2</ref>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>creal(z)*creal(z)<sp/>+<sp/>cimag(z)*cimag(z);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a84b56e81b9f30ab371756fd2366f1a17" kindref="member">ctmm_complex_arg</ref>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>z)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atan2(cimag(z),<sp/>creal(z));</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(<ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref><sp/>*mat,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>val)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat-&gt;data[row*4<sp/>+<sp/>col]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(<ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref><sp/>*mat,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat-&gt;data[row*4<sp/>+<sp/>col];</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a7dbeb8fe6b43fcc408f3f591cc8e0563" kindref="member">ctmm_matrix_mul</ref>(<ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref><sp/>*mat1,<sp/><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref><sp/>*mat2,<sp/><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref><sp/>*res)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Unrolled<sp/>naive<sp/>matrix<sp/>multiplication.<sp/>This<sp/>could<sp/>probably<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//put<sp/>in<sp/>a<sp/>loop<sp/>and<sp/>optimised<sp/>out<sp/>by<sp/>the<sp/>compiler<sp/>anyway.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[0]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[0],<sp/>mat2-&gt;data[0]),</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[1],<sp/>mat2-&gt;data[4])),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[2],<sp/>mat2-&gt;data[8])),</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[3],<sp/>mat2-&gt;data[12]));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[4]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[4],<sp/>mat2-&gt;data[0]),</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[5],<sp/>mat2-&gt;data[4])),</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[6],<sp/>mat2-&gt;data[8])),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[7],<sp/>mat2-&gt;data[12]));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[8]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[8],<sp/>mat2-&gt;data[0]),</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[9],<sp/>mat2-&gt;data[4])),</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[10],<sp/>mat2-&gt;data[8])),</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[11],<sp/>mat2-&gt;data[12]));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[12]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[12],<sp/>mat2-&gt;data[0]),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[13],<sp/>mat2-&gt;data[4])),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[14],<sp/>mat2-&gt;data[8])),</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[15],<sp/>mat2-&gt;data[12]));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[1]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[0],<sp/>mat2-&gt;data[1]),</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[1],<sp/>mat2-&gt;data[5])),</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[2],<sp/>mat2-&gt;data[9])),</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[3],<sp/>mat2-&gt;data[13]));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[5]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[4],<sp/>mat2-&gt;data[1]),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[5],<sp/>mat2-&gt;data[5])),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[6],<sp/>mat2-&gt;data[9])),</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[7],<sp/>mat2-&gt;data[13]));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[9]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[8],<sp/>mat2-&gt;data[1]),</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[9],<sp/>mat2-&gt;data[5])),</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[10],<sp/>mat2-&gt;data[9])),</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[11],<sp/>mat2-&gt;data[13]));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[13]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[12],<sp/>mat2-&gt;data[1]),</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[13],<sp/>mat2-&gt;data[5])),</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[14],<sp/>mat2-&gt;data[9])),</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[15],<sp/>mat2-&gt;data[13]));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[2]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[0],<sp/>mat2-&gt;data[2]),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[1],<sp/>mat2-&gt;data[6])),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[2],<sp/>mat2-&gt;data[10])),</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[3],<sp/>mat2-&gt;data[14]));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[6]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[4],<sp/>mat2-&gt;data[2]),</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[5],<sp/>mat2-&gt;data[6])),</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[6],<sp/>mat2-&gt;data[10])),</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[7],<sp/>mat2-&gt;data[14]));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[10]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[8],<sp/>mat2-&gt;data[2]),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[9],<sp/>mat2-&gt;data[6])),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[10],<sp/>mat2-&gt;data[10])),</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[11],<sp/>mat2-&gt;data[14]));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[14]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[12],<sp/>mat2-&gt;data[2]),</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[13],<sp/>mat2-&gt;data[6])),</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[14],<sp/>mat2-&gt;data[10])),</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[15],<sp/>mat2-&gt;data[14]));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[3]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[0],<sp/>mat2-&gt;data[3]),</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[1],<sp/>mat2-&gt;data[7])),</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[2],<sp/>mat2-&gt;data[11])),</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[3],<sp/>mat2-&gt;data[15]));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[7]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[4],<sp/>mat2-&gt;data[3]),</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[5],<sp/>mat2-&gt;data[7])),</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[6],<sp/>mat2-&gt;data[11])),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[7],<sp/>mat2-&gt;data[15]));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[11]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[8],<sp/>mat2-&gt;data[3]),</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[9],<sp/>mat2-&gt;data[7])),</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[10],<sp/>mat2-&gt;data[11])),</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[11],<sp/>mat2-&gt;data[15]));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res-&gt;data[15]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(<ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[12],<sp/>mat2-&gt;data[3]),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[13],<sp/>mat2-&gt;data[7])),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[14],<sp/>mat2-&gt;data[11])),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(mat1-&gt;data[15],<sp/>mat2-&gt;data[15]));</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/><ref refid="ctmm_8c_1a2edabd1077bd3ea3fb17d3bbfea89311" kindref="member">ctmm_create_stack</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlyrs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vwl,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_in)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>stack;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack<sp/>=<sp/>(<ref refid="ctmm_8h_1a208d8ce4677b9c01ae09885f72fc536d" kindref="member">ctmm_stack</ref>)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref>));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;vwl<sp/>=<sp/>vwl;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;t_in<sp/>=<sp/>t_in;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;nlyrs<sp/>=<sp/>nlyrs;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;lyr_inds<sp/>=</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref>*)<sp/>malloc(nlyrs<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<sp/>stack-&gt;lyr_inds);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;lyr_ds<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)<sp/>malloc(nlyrs<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*<sp/>stack-&gt;lyr_ds);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nlyrs<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\nError,<sp/>stack<sp/>initialised<sp/>with<sp/>no<sp/>layers.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1af16ab0909b285aa22571bec6713f62cb" kindref="member">ctmm_free_stack</ref>(<ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>stack)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(stack-&gt;lyr_inds);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(stack-&gt;lyr_ds);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(stack);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a32befee43f0a7a47d72395197140a27c" kindref="member">ctmm_set_ind</ref>(<ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>stack,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lyr_n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;lyr_inds[lyr_n]<sp/>=<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(x,<sp/>y);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a8c8b64a53a5376f96c174ab359daacc6" kindref="member">ctmm_set_d</ref>(<ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>stack,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lyr_n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;lyr_ds[lyr_n]<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1a32d942b103a0b890fbce784d87cb6a1f" kindref="member">kz</ref>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>n,<sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>k,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vwl)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="ctmm_8c_1ac396fbdfd0ddd6310fb9806201d96539" kindref="member">ctmm_complex_mul_real</ref>(n,<sp/>2*M_PI/vwl);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(n,<sp/>n);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(k,<sp/>k);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="ctmm_8c_1a55252e47eeb22ec37e7eb50cda6c1ca6" kindref="member">ctmm_complex_sub</ref>(n,<sp/>k);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="ctmm_8c_1ac0ec321ce48ab4a98377e397699aaa82" kindref="member">ctmm_complex_sqrt</ref>(n);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/><ref refid="ctmm_8c_1a04b474cdb46c4c66f9774647d29f3f41" kindref="member">ctmm_get_ind</ref>(<ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>stack,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lyr_n)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack-&gt;lyr_inds[lyr_n];</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a79f04adb70eecf66fef2209b9d75fe9c" kindref="member">ctmm_get_d</ref>(<ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>stack,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lyr_n)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack-&gt;lyr_ds[lyr_n];</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a25b9de0418a73bc8f37ba2a7789924ad" kindref="member">ctmm_get_vwl</ref>(<ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>stack)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack-&gt;vwl;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1ac443f13f8513c290d2851351eefee8da" kindref="member">ctmm_get_t_in</ref>(<ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>stack)</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack-&gt;t_in;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1aa06062f77efb4011d9dfe71fd30bc131" kindref="member">ctmm_get_nlyrs</ref>(<ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>stack)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack-&gt;nlyrs;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref><sp/>*<ref refid="ctmm_8c_1abe9c12ff2df15ca021118c8a04c774aa" kindref="member">ctmm_get_matrix</ref>(<ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>stack)</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;stack-&gt;matrix;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a4408a75f27f34aff932b811d711877c6" kindref="member">evaluate_prop</ref>(<ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref><sp/>*pmat,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>n,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>k,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vwl)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/><ref refid="ctmm_8c_1a32d942b103a0b890fbce784d87cb6a1f" kindref="member">kz</ref>(n,<sp/>k,<sp/>vwl);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>expn;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expn<sp/>=<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(d,<sp/>0);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expn<sp/>=<sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(expn,<sp/>k);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expn<sp/>=<sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(expn,<sp/>I);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>0,<sp/>1,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>0,<sp/>2,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>0,<sp/>3,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>1,<sp/>0,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>1,<sp/>2,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>1,<sp/>3,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>2,<sp/>1,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>2,<sp/>0,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>2,<sp/>3,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>3,<sp/>1,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>3,<sp/>2,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>3,<sp/>0,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>0,<sp/>0,<sp/><ref refid="ctmm_8c_1a7b6264648ca7235f90d2e13ce38c1a21" kindref="member">ctmm_complex_exp</ref>(expn));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a7b6264648ca7235f90d2e13ce38c1a21" kindref="member">ctmm_complex_exp</ref>(<ref refid="ctmm_8c_1ac396fbdfd0ddd6310fb9806201d96539" kindref="member">ctmm_complex_mul_real</ref>(expn,<sp/>-1)));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>2,<sp/>2,<sp/><ref refid="ctmm_8c_1a7b6264648ca7235f90d2e13ce38c1a21" kindref="member">ctmm_complex_exp</ref>(expn));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(pmat,<sp/>3,<sp/>3,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a7b6264648ca7235f90d2e13ce38c1a21" kindref="member">ctmm_complex_exp</ref>(<ref refid="ctmm_8c_1ac396fbdfd0ddd6310fb9806201d96539" kindref="member">ctmm_complex_mul_real</ref>(expn,<sp/>-1)));</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a77b3c2fc690a96610df870d454e8a9fa" kindref="member">fresnel_coefs</ref>(<ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>*coefs,<sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>n0,<sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>n1,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>k,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vwl)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>kz0,<sp/>kz1;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kz0<sp/>=<sp/><ref refid="ctmm_8c_1a32d942b103a0b890fbce784d87cb6a1f" kindref="member">kz</ref>(n0,<sp/>k,<sp/>vwl);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kz1<sp/>=<sp/><ref refid="ctmm_8c_1a32d942b103a0b890fbce784d87cb6a1f" kindref="member">kz</ref>(n1,<sp/>k,<sp/>vwl);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[0]<sp/>=<sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(kz1,<sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(n0,<sp/>n0));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[1]<sp/>=<sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(kz0,<sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(n1,<sp/>n1));</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[2]<sp/>=<sp/><ref refid="ctmm_8c_1a55252e47eeb22ec37e7eb50cda6c1ca6" kindref="member">ctmm_complex_sub</ref>(coefs[0],<sp/>coefs[1]);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[3]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(coefs[0],<sp/>coefs[1]);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[0]<sp/>=<sp/><ref refid="ctmm_8c_1ada1e9a3839be822e487f3fca8acd573f" kindref="member">ctmm_complex_div</ref>(coefs[2],<sp/>coefs[3]);<sp/></highlight><highlight class="comment">//rP<sp/>(TM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[1]<sp/>=<sp/><ref refid="ctmm_8c_1a55252e47eeb22ec37e7eb50cda6c1ca6" kindref="member">ctmm_complex_sub</ref>(<ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(1,<sp/>0),<sp/>coefs[0]);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[1]<sp/>=<sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(coefs[1],<sp/>n0);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[1]<sp/>=<sp/><ref refid="ctmm_8c_1ada1e9a3839be822e487f3fca8acd573f" kindref="member">ctmm_complex_div</ref>(coefs[1],<sp/>n1);<sp/></highlight><highlight class="comment">//tP<sp/>(TM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[2]<sp/>=<sp/><ref refid="ctmm_8c_1a55252e47eeb22ec37e7eb50cda6c1ca6" kindref="member">ctmm_complex_sub</ref>(kz0,<sp/>kz1);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[3]<sp/>=<sp/><ref refid="ctmm_8c_1ad157e583a138eae74eab9abac867075b" kindref="member">ctmm_complex_add</ref>(kz0,<sp/>kz1);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[2]<sp/>=<sp/><ref refid="ctmm_8c_1ada1e9a3839be822e487f3fca8acd573f" kindref="member">ctmm_complex_div</ref>(coefs[2],<sp/>coefs[3]);<sp/></highlight><highlight class="comment">//rS<sp/>(TE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[3]<sp/>=<sp/><ref refid="ctmm_8c_1a880c74cdfcd1c8c7b21c1cea00105ec9" kindref="member">ctmm_complex_add_real</ref>(coefs[2],<sp/>1);<sp/></highlight><highlight class="comment">//tS<sp/>(TE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a0a5fb333e72ce9adfcb2da0b1fa39d19" kindref="member">evaluate_tran</ref>(<ref refid="structctmm__matrix" kindref="compound">ctmm_matrix</ref><sp/>*tmat,<sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>k,<sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>n0,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>n1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vwl)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>coefs[4];</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a77b3c2fc690a96610df870d454e8a9fa" kindref="member">fresnel_coefs</ref>(coefs,<sp/>k,<sp/>n0,<sp/>n1,<sp/>vwl);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[1]<sp/>=<sp/><ref refid="ctmm_8c_1a7d0966ff911cc38769383bf2eabf159d" kindref="member">ctmm_complex_inv</ref>(coefs[1]);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[3]<sp/>=<sp/><ref refid="ctmm_8c_1a7d0966ff911cc38769383bf2eabf159d" kindref="member">ctmm_complex_inv</ref>(coefs[3]);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>0,<sp/>2,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>0,<sp/>3,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>1,<sp/>2,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>1,<sp/>3,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>2,<sp/>0,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>2,<sp/>1,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>3,<sp/>0,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>3,<sp/>1,<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(0,<sp/>0));</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>0,<sp/>0,<sp/>coefs[1]);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>1,<sp/>1,<sp/>coefs[1]);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>2,<sp/>2,<sp/>coefs[3]);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>3,<sp/>3,<sp/>coefs[3]);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>1,<sp/>0,<sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(coefs[0],<sp/>coefs[1]));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>0,<sp/>1,<sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(coefs[0],<sp/>coefs[1]));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>2,<sp/>3,<sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(coefs[2],<sp/>coefs[3]));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a9fe3028943092dccbda7b718c9f8bd95" kindref="member">ctmm_matrix_set</ref>(tmat,<sp/>3,<sp/>2,<sp/><ref refid="ctmm_8c_1ac7b3b9fbb51dc1f845cf01ed1320f207" kindref="member">ctmm_complex_mul</ref>(coefs[2],<sp/>coefs[3]));</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a7d1640fcbbdfc1557ff268183d630b61" kindref="member">ctmm_evaluate</ref>(<ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>stack)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;kx<sp/>=<sp/><ref refid="ctmm_8c_1a924330dd15385b0252c987dac9a3e5d6" kindref="member">ctmm_complex_set</ref>(creal(stack-&gt;lyr_inds[0])*sin(stack-&gt;t_in)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*2*M_PI/stack-&gt;vwl,<sp/>0);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stack-&gt;nlyrs<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a4408a75f27f34aff932b811d711877c6" kindref="member">evaluate_prop</ref>(&amp;stack-&gt;matrix,<sp/>stack-&gt;lyr_ds[0],</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;lyr_inds[0],<sp/>stack-&gt;kx,<sp/>stack-&gt;vwl);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;stack-&gt;nlyrs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a4408a75f27f34aff932b811d711877c6" kindref="member">evaluate_prop</ref>(&amp;stack-&gt;tmp1,<sp/>stack-&gt;lyr_ds[i],</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;lyr_inds[i],<sp/>stack-&gt;kx,<sp/>stack-&gt;vwl);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a0a5fb333e72ce9adfcb2da0b1fa39d19" kindref="member">evaluate_tran</ref>(&amp;stack-&gt;tmp2,<sp/>stack-&gt;lyr_inds[i-1],</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;lyr_inds[i],<sp/>stack-&gt;kx,<sp/>stack-&gt;vwl);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a7dbeb8fe6b43fcc408f3f591cc8e0563" kindref="member">ctmm_matrix_mul</ref>(&amp;stack-&gt;matrix,<sp/>&amp;stack-&gt;tmp2,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stack-&gt;tmp3);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a7dbeb8fe6b43fcc408f3f591cc8e0563" kindref="member">ctmm_matrix_mul</ref>(&amp;stack-&gt;tmp3,<sp/>&amp;stack-&gt;tmp1,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stack-&gt;matrix);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stack-&gt;nlyrs<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a4408a75f27f34aff932b811d711877c6" kindref="member">evaluate_prop</ref>(&amp;stack-&gt;matrix,<sp/>stack-&gt;lyr_ds[0],</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;lyr_inds[0],<sp/>stack-&gt;kx,<sp/>stack-&gt;vwl);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a30648dba2233deb4014ce2632d51e43c" kindref="member">ctmm_rts</ref>(<ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>stack,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*coefs)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_fin,<sp/>t_mult;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_fin<sp/>=<sp/>atan(creal(stack-&gt;kx)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/creal(<ref refid="ctmm_8c_1a32d942b103a0b890fbce784d87cb6a1f" kindref="member">kz</ref>(stack-&gt;lyr_inds[stack-&gt;nlyrs<sp/>-<sp/>1],</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;kx,<sp/>stack-&gt;vwl)));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_mult<sp/>=<sp/>(cos(t_fin)*creal(stack-&gt;lyr_inds[stack-&gt;nlyrs<sp/>-<sp/>1]))</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/(cos(stack-&gt;t_in)*creal(stack-&gt;lyr_inds[0]));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[0]<sp/>=<sp/><ref refid="ctmm_8c_1a8089534c72b9ab48e523a0169094176f" kindref="member">ctmm_complex_abs2</ref>(<ref refid="ctmm_8c_1ada1e9a3839be822e487f3fca8acd573f" kindref="member">ctmm_complex_div</ref>(<ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stack-&gt;matrix,<sp/>1,<sp/>0),<sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>0,<sp/>0)));</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[1]<sp/>=<sp/>t_mult*<ref refid="ctmm_8c_1a8089534c72b9ab48e523a0169094176f" kindref="member">ctmm_complex_abs2</ref>(<ref refid="ctmm_8c_1a7d0966ff911cc38769383bf2eabf159d" kindref="member">ctmm_complex_inv</ref>(</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>0,<sp/>0)));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[2]<sp/>=<sp/><ref refid="ctmm_8c_1a8089534c72b9ab48e523a0169094176f" kindref="member">ctmm_complex_abs2</ref>(<ref refid="ctmm_8c_1ada1e9a3839be822e487f3fca8acd573f" kindref="member">ctmm_complex_div</ref>(<ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stack-&gt;matrix,<sp/>3,<sp/>2),<sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>2,<sp/>2)));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[3]<sp/>=<sp/>t_mult*<ref refid="ctmm_8c_1a8089534c72b9ab48e523a0169094176f" kindref="member">ctmm_complex_abs2</ref>(<ref refid="ctmm_8c_1a7d0966ff911cc38769383bf2eabf159d" kindref="member">ctmm_complex_inv</ref>(</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>2,<sp/>2)));</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a26daf61ec975b2ee6de362418f7c5d65" kindref="member">ctmm_rtps</ref>(<ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>stack,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*coefs)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_fin,<sp/>t_mult;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_fin<sp/>=<sp/>atan(creal(stack-&gt;kx)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/creal(<ref refid="ctmm_8c_1a32d942b103a0b890fbce784d87cb6a1f" kindref="member">kz</ref>(stack-&gt;lyr_inds[stack-&gt;nlyrs<sp/>-<sp/>1],</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;kx,<sp/>stack-&gt;vwl)));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_mult<sp/>=<sp/>(cos(t_fin)*creal(stack-&gt;lyr_inds[stack-&gt;nlyrs<sp/>-<sp/>1]))</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/(cos(stack-&gt;t_in)*creal(stack-&gt;lyr_inds[0]));</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[0]<sp/>=<sp/><ref refid="ctmm_8c_1a8089534c72b9ab48e523a0169094176f" kindref="member">ctmm_complex_abs2</ref>(<ref refid="ctmm_8c_1ada1e9a3839be822e487f3fca8acd573f" kindref="member">ctmm_complex_div</ref>(<ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stack-&gt;matrix,<sp/>1,<sp/>0),<sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>0,<sp/>0)));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[1]<sp/>=<sp/>t_mult*<ref refid="ctmm_8c_1a8089534c72b9ab48e523a0169094176f" kindref="member">ctmm_complex_abs2</ref>(<ref refid="ctmm_8c_1a7d0966ff911cc38769383bf2eabf159d" kindref="member">ctmm_complex_inv</ref>(</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>0,<sp/>0)));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[2]<sp/>=<sp/><ref refid="ctmm_8c_1a8089534c72b9ab48e523a0169094176f" kindref="member">ctmm_complex_abs2</ref>(<ref refid="ctmm_8c_1ada1e9a3839be822e487f3fca8acd573f" kindref="member">ctmm_complex_div</ref>(<ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stack-&gt;matrix,<sp/>3,<sp/>2),<sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>2,<sp/>2)));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[3]<sp/>=<sp/>t_mult*<ref refid="ctmm_8c_1a8089534c72b9ab48e523a0169094176f" kindref="member">ctmm_complex_abs2</ref>(<ref refid="ctmm_8c_1a7d0966ff911cc38769383bf2eabf159d" kindref="member">ctmm_complex_inv</ref>(</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>2,<sp/>2)));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[4]<sp/>=<sp/><ref refid="ctmm_8c_1a84b56e81b9f30ab371756fd2366f1a17" kindref="member">ctmm_complex_arg</ref>(<ref refid="ctmm_8c_1ada1e9a3839be822e487f3fca8acd573f" kindref="member">ctmm_complex_div</ref>(<ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stack-&gt;matrix,<sp/>1,<sp/>0),<sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>0,<sp/>0)));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[5]<sp/>=<sp/><ref refid="ctmm_8c_1a84b56e81b9f30ab371756fd2366f1a17" kindref="member">ctmm_complex_arg</ref>(<ref refid="ctmm_8c_1a7d0966ff911cc38769383bf2eabf159d" kindref="member">ctmm_complex_inv</ref>(</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>0,<sp/>0)));</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[6]<sp/>=<sp/><ref refid="ctmm_8c_1a84b56e81b9f30ab371756fd2366f1a17" kindref="member">ctmm_complex_arg</ref>(<ref refid="ctmm_8c_1ada1e9a3839be822e487f3fca8acd573f" kindref="member">ctmm_complex_div</ref>(<ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stack-&gt;matrix,<sp/>3,<sp/>2),<sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>2,<sp/>2)));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[7]<sp/>=<sp/><ref refid="ctmm_8c_1a84b56e81b9f30ab371756fd2366f1a17" kindref="member">ctmm_complex_arg</ref>(<ref refid="ctmm_8c_1a7d0966ff911cc38769383bf2eabf159d" kindref="member">ctmm_complex_inv</ref>(</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>2,<sp/>2)));</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ctmm_8c_1a05b954b10e5a07eea69727509d89f346" kindref="member">ctmm_rtc</ref>(<ref refid="structctmm__stack" kindref="compound">ctmm_stack</ref><sp/>stack,<sp/><ref refid="structctmm__complex" kindref="compound">ctmm_complex</ref><sp/>*coefs)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[0]<sp/>=<sp/><ref refid="ctmm_8c_1ada1e9a3839be822e487f3fca8acd573f" kindref="member">ctmm_complex_div</ref>(<ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>1,<sp/>0),</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[1]<sp/>=<sp/><ref refid="ctmm_8c_1a7d0966ff911cc38769383bf2eabf159d" kindref="member">ctmm_complex_inv</ref>(<ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[2]<sp/>=<sp/><ref refid="ctmm_8c_1ada1e9a3839be822e487f3fca8acd573f" kindref="member">ctmm_complex_div</ref>(<ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>3,<sp/>2),</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>2,<sp/>2));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs[3]<sp/>=<sp/><ref refid="ctmm_8c_1a7d0966ff911cc38769383bf2eabf159d" kindref="member">ctmm_complex_inv</ref>(<ref refid="ctmm_8c_1a2afcc968c9cfb9d22bef2622be51f29a" kindref="member">ctmm_matrix_get</ref>(&amp;stack-&gt;matrix,<sp/>2,<sp/>2));</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/ctmm.c"/>
  </compounddef>
</doxygen>
